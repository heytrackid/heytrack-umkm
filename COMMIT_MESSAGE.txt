fix: Add Node.js runtime config to all API routes for jsdom compatibility

## Problem
Production deployment failing with error:
```
Error: Failed to load external module jsdom: Error [ERR_REQUIRE_ESM]
```

## Root Cause
- `isomorphic-dompurify` (used for XSS protection) requires `jsdom`
- `jsdom` is Node.js-only library, incompatible with Vercel Edge Runtime
- Next.js 15+ defaults to Edge Runtime for API routes

## Solution
1. Added `export const runtime = 'nodejs'` to all 62 API routes
2. Updated Supabase server client to accept both `nodejs` and `edge` runtime
3. Created automation script for future API routes

## Changes
- Modified: All `src/app/api/**/route.ts` files (62 total)
- Modified: `src/utils/supabase/server.ts`
- Added: `scripts/add-runtime-config.sh`
- Added: Documentation files (PRODUCTION_FIX.md, DEPLOYMENT_READY.md, etc.)

## Impact
- ✅ Fixes production jsdom errors
- ✅ Maintains full DOMPurify XSS protection
- ✅ No breaking changes
- ⚠️ Slightly slower cold starts (~100-300ms) - acceptable trade-off

## Testing
- [x] Local build successful
- [x] Type check passed (existing errors unrelated)
- [x] All 62 routes have runtime config
- [ ] Vercel preview deployment (pending)
- [ ] Production deployment (pending)

## References
- See PRODUCTION_FIX.md for detailed explanation
- See DEPLOYMENT_READY.md for deployment checklist
- See .kiro/steering/api-runtime-config.md for developer guide
